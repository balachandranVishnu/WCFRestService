//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Harrods.Service.Employees.UnitTest.EmployeeServiceSOAP {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeServiceSOAP.IEmployeeContract")]
    public interface IEmployeeContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/CreateEmployee", ReplyAction="http://tempuri.org/IEmployeeContract/CreateEmployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Harrods.Service.Employees.Entities.ExceptionFaultContract), Action="http://tempuri.org/IEmployeeContract/CreateEmployeeExceptionFaultContractFault", Name="ExceptionFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Harrods.Service.Employees.Entities")]
        bool CreateEmployee(Harrods.Service.Employees.Entities.EmployeeEntity Employee, Harrods.Service.Employees.Entities.AddressEntity address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/CreateEmployee", ReplyAction="http://tempuri.org/IEmployeeContract/CreateEmployeeResponse")]
        System.Threading.Tasks.Task<bool> CreateEmployeeAsync(Harrods.Service.Employees.Entities.EmployeeEntity Employee, Harrods.Service.Employees.Entities.AddressEntity address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployeeContract/UpdateEmployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Harrods.Service.Employees.Entities.ExceptionFaultContract), Action="http://tempuri.org/IEmployeeContract/UpdateEmployeeExceptionFaultContractFault", Name="ExceptionFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Harrods.Service.Employees.Entities")]
        bool UpdateEmployee(Harrods.Service.Employees.Entities.EmployeeEntity Employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/UpdateEmployee", ReplyAction="http://tempuri.org/IEmployeeContract/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<bool> UpdateEmployeeAsync(Harrods.Service.Employees.Entities.EmployeeEntity Employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployeeContract/DeleteEmployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Harrods.Service.Employees.Entities.ExceptionFaultContract), Action="http://tempuri.org/IEmployeeContract/DeleteEmployeeExceptionFaultContractFault", Name="ExceptionFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Harrods.Service.Employees.Entities")]
        bool DeleteEmployee(Harrods.Service.Employees.Entities.EmployeeEntity Employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/DeleteEmployee", ReplyAction="http://tempuri.org/IEmployeeContract/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<bool> DeleteEmployeeAsync(Harrods.Service.Employees.Entities.EmployeeEntity Employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/GetEmployee", ReplyAction="http://tempuri.org/IEmployeeContract/GetEmployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Harrods.Service.Employees.Entities.ExceptionFaultContract), Action="http://tempuri.org/IEmployeeContract/GetEmployeeExceptionFaultContractFault", Name="ExceptionFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Harrods.Service.Employees.Entities")]
        Harrods.Service.Employees.Entities.EmployeeEntity GetEmployee(int EmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/GetEmployee", ReplyAction="http://tempuri.org/IEmployeeContract/GetEmployeeResponse")]
        System.Threading.Tasks.Task<Harrods.Service.Employees.Entities.EmployeeEntity> GetEmployeeAsync(int EmployeeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/GetAllEmployees", ReplyAction="http://tempuri.org/IEmployeeContract/GetAllEmployeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Harrods.Service.Employees.Entities.ExceptionFaultContract), Action="http://tempuri.org/IEmployeeContract/GetAllEmployeesExceptionFaultContractFault", Name="ExceptionFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Harrods.Service.Employees.Entities")]
        Harrods.Service.Employees.Entities.EmployeeEntity[] GetAllEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/GetAllEmployees", ReplyAction="http://tempuri.org/IEmployeeContract/GetAllEmployeesResponse")]
        System.Threading.Tasks.Task<Harrods.Service.Employees.Entities.EmployeeEntity[]> GetAllEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/UpdateAddress", ReplyAction="http://tempuri.org/IEmployeeContract/UpdateAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Harrods.Service.Employees.Entities.ExceptionFaultContract), Action="http://tempuri.org/IEmployeeContract/UpdateAddressExceptionFaultContractFault", Name="ExceptionFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Harrods.Service.Employees.Entities")]
        bool UpdateAddress(Harrods.Service.Employees.Entities.AddressEntity Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/UpdateAddress", ReplyAction="http://tempuri.org/IEmployeeContract/UpdateAddressResponse")]
        System.Threading.Tasks.Task<bool> UpdateAddressAsync(Harrods.Service.Employees.Entities.AddressEntity Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/DeleteAddress", ReplyAction="http://tempuri.org/IEmployeeContract/DeleteAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Harrods.Service.Employees.Entities.ExceptionFaultContract), Action="http://tempuri.org/IEmployeeContract/DeleteAddressExceptionFaultContractFault", Name="ExceptionFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Harrods.Service.Employees.Entities")]
        bool DeleteAddress(Harrods.Service.Employees.Entities.AddressEntity Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/DeleteAddress", ReplyAction="http://tempuri.org/IEmployeeContract/DeleteAddressResponse")]
        System.Threading.Tasks.Task<bool> DeleteAddressAsync(Harrods.Service.Employees.Entities.AddressEntity Address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/GetAddress", ReplyAction="http://tempuri.org/IEmployeeContract/GetAddressResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Harrods.Service.Employees.Entities.ExceptionFaultContract), Action="http://tempuri.org/IEmployeeContract/GetAddressExceptionFaultContractFault", Name="ExceptionFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Harrods.Service.Employees.Entities")]
        Harrods.Service.Employees.Entities.AddressEntity GetAddress(int AddressID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeContract/GetAddress", ReplyAction="http://tempuri.org/IEmployeeContract/GetAddressResponse")]
        System.Threading.Tasks.Task<Harrods.Service.Employees.Entities.AddressEntity> GetAddressAsync(int AddressID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeContractChannel : Harrods.Service.Employees.UnitTest.EmployeeServiceSOAP.IEmployeeContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeContractClient : System.ServiceModel.ClientBase<Harrods.Service.Employees.UnitTest.EmployeeServiceSOAP.IEmployeeContract>, Harrods.Service.Employees.UnitTest.EmployeeServiceSOAP.IEmployeeContract {
        
        public EmployeeContractClient() {
        }
        
        public EmployeeContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateEmployee(Harrods.Service.Employees.Entities.EmployeeEntity Employee, Harrods.Service.Employees.Entities.AddressEntity address) {
            return base.Channel.CreateEmployee(Employee, address);
        }
        
        public System.Threading.Tasks.Task<bool> CreateEmployeeAsync(Harrods.Service.Employees.Entities.EmployeeEntity Employee, Harrods.Service.Employees.Entities.AddressEntity address) {
            return base.Channel.CreateEmployeeAsync(Employee, address);
        }
        
        public bool UpdateEmployee(Harrods.Service.Employees.Entities.EmployeeEntity Employee) {
            return base.Channel.UpdateEmployee(Employee);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateEmployeeAsync(Harrods.Service.Employees.Entities.EmployeeEntity Employee) {
            return base.Channel.UpdateEmployeeAsync(Employee);
        }
        
        public bool DeleteEmployee(Harrods.Service.Employees.Entities.EmployeeEntity Employee) {
            return base.Channel.DeleteEmployee(Employee);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEmployeeAsync(Harrods.Service.Employees.Entities.EmployeeEntity Employee) {
            return base.Channel.DeleteEmployeeAsync(Employee);
        }
        
        public Harrods.Service.Employees.Entities.EmployeeEntity GetEmployee(int EmployeeID) {
            return base.Channel.GetEmployee(EmployeeID);
        }
        
        public System.Threading.Tasks.Task<Harrods.Service.Employees.Entities.EmployeeEntity> GetEmployeeAsync(int EmployeeID) {
            return base.Channel.GetEmployeeAsync(EmployeeID);
        }
        
        public Harrods.Service.Employees.Entities.EmployeeEntity[] GetAllEmployees() {
            return base.Channel.GetAllEmployees();
        }
        
        public System.Threading.Tasks.Task<Harrods.Service.Employees.Entities.EmployeeEntity[]> GetAllEmployeesAsync() {
            return base.Channel.GetAllEmployeesAsync();
        }
        
        public bool UpdateAddress(Harrods.Service.Employees.Entities.AddressEntity Address) {
            return base.Channel.UpdateAddress(Address);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateAddressAsync(Harrods.Service.Employees.Entities.AddressEntity Address) {
            return base.Channel.UpdateAddressAsync(Address);
        }
        
        public bool DeleteAddress(Harrods.Service.Employees.Entities.AddressEntity Address) {
            return base.Channel.DeleteAddress(Address);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAddressAsync(Harrods.Service.Employees.Entities.AddressEntity Address) {
            return base.Channel.DeleteAddressAsync(Address);
        }
        
        public Harrods.Service.Employees.Entities.AddressEntity GetAddress(int AddressID) {
            return base.Channel.GetAddress(AddressID);
        }
        
        public System.Threading.Tasks.Task<Harrods.Service.Employees.Entities.AddressEntity> GetAddressAsync(int AddressID) {
            return base.Channel.GetAddressAsync(AddressID);
        }
    }
}
